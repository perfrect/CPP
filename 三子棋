game.h 头文件中
#define  ROW 10
#define  COL 10

#include <stdio.h>

void InitBoard(char board[ROW][COL], int row, int col);
void DisplayBoard(char board[ROW][COL], int row , int col);




game.cpp 源文件中

#include  "game.h"

void InitBoard(char board[ROW][COL], int row, int col)
{
	int i = 0, j = 0;
	for (i = 0; i < ROW; i++)
	{
		for (j = 0; j < COL; j++)
		{
			board[i][j] = ' ';
		}
	}
}

void DisplayBoard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < row; i++)
	{
		//printf(" %c %c %c \n",board[i][0],board[i][1],board[i][2]);//打印一行数据(暴力解法)
		int j;
		for (j = 0; j < col; j++)
		{
			printf(" %c ", board[i][j]);//打印一行数据
			if (j < col- 1)
				printf("|");
		}
		printf("\n");
		if (i < row - 1)//控制打印分割行
		{
			for (j = 0; j < col; j++)
			{
				printf("___");
				if (j < row - 1)
					printf("|");
			}
			printf("\n");
		}
	}
}





main.cpp 源文件中

#define _CRT_SECURE_NO_WARNINGS 1

#include "game.h"
void menu ()
{
	printf("************************************\n");
	printf("******1.play     0.exit*************\n");
	printf("************************************\n");
} 
//游戏的整个实现
void game()
{    //数组存放走出的棋盘信息
	char board[ROW][COL] = { 0 };//全部空格
	InitBoard(board, ROW, COL);//初始化棋盘
	DisplayBoard (board, ROW, COL);//打印棋盘
}
void test()
{
	int input = 0;
	do
	{
		menu();
		printf("请选择：");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			game();
			printf("三子棋\n");
			break;
		case 0:
			printf("退出游戏\n");
			break;
		default: 
			printf("选择错误，重新选择\n");
			break;
		}
	} while (input);
}
int main()
{
	test(); 
	return 0;
}
